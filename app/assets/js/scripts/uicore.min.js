const $=require("jquery");const{ipcRenderer,shell,webFrame}=require("electron");const remote=require("@electron/remote");const isDev=require("./assets/js/isdev.min");const LoggerUtil=require("./assets/js/loggerutil.min");const loggerUICore=LoggerUtil("%c[UICore]","color: #000668; font-weight: bold");const loggerAutoUpdater=LoggerUtil("%c[AutoUpdater]","color: #000668; font-weight: bold");const loggerAutoUpdaterSuccess=LoggerUtil("%c[AutoUpdater]","color: #209b07; font-weight: bold");process.traceProcessWarnings=true;process.traceDeprecation=true;window.eval=global.eval=function(){throw new Error("Sorry, this app does not support window.eval().")};remote.getCurrentWebContents().on("devtools-opened",()=>{console.log("%cIf you've been told to paste something here, you're being scammed.","font-size: 5px");console.log("%cUnless you know exactly what you're doing, close this window.","font-size: 5px")});webFrame.setZoomLevel(0);webFrame.setVisualZoomLevelLimits(1,1);let updateCheckListener;if(!isDev){ipcRenderer.on("autoUpdateNotification",(event,arg,info)=>{switch(arg){case"checking-for-update":loggerAutoUpdater.log("Checking for update..");settingsUpdateButtonStatus("Checking for Updates..",true);break;case"update-available":loggerAutoUpdaterSuccess.log("New update available",info.version);if(process.platform==="darwin"){info.darwindownload=`https://github.com/ModRealms-Network/HeliosLauncher/releases/download/v${info.version}/ModRealms-Launcher-setup-${info.version}.dmg`;showUpdateUI(info)}populateSettingsUpdateInformation(info);break;case"update-downloaded":loggerAutoUpdaterSuccess.log("Update "+info.version+" ready to be installed.");settingsUpdateButtonStatus("Install Now",false,()=>{if(!isDev){ipcRenderer.send("autoUpdateAction","installUpdateNow")}});showUpdateUI(info);break;case"update-not-available":loggerAutoUpdater.log("No new update found.");settingsUpdateButtonStatus("Check for Updates");break;case"ready":updateCheckListener=setInterval(()=>{ipcRenderer.send("autoUpdateAction","checkForUpdate")},18e5);ipcRenderer.send("autoUpdateAction","checkForUpdate");break;case"realerror":if(info!=null&&info.code!=null){if(info.code==="ERR_UPDATER_INVALID_RELEASE_FEED"){loggerAutoUpdater.log("No suitable releases found.")}else if(info.code==="ERR_XML_MISSED_ELEMENT"){loggerAutoUpdater.log("No releases found.")}else{loggerAutoUpdater.error("Error during update check..",info);loggerAutoUpdater.debug("Error Code:",info.code)}}break;default:loggerAutoUpdater.log("Unknown argument",arg);break}})}function changeAllowPrerelease(val){ipcRenderer.send("autoUpdateAction","allowPrereleaseChange",val)}function showUpdateUI(info){document.getElementById("image_seal_container").setAttribute("update",true);document.getElementById("image_seal_container").onclick=()=>{switchView(getCurrentView(),VIEWS.settings,250,250,()=>{settingsNavItemListener(document.getElementById("settingsNavUpdate"),false)})}}document.addEventListener("readystatechange",function(){if(document.readyState==="interactive"){loggerUICore.log("UICore Initializing..");Array.from(document.getElementsByClassName("fCb")).map(val=>{val.addEventListener("click",e=>{const window=remote.getCurrentWindow();window.destroy()})});Array.from(document.getElementsByClassName("fRb")).map(val=>{val.addEventListener("click",e=>{const window=remote.getCurrentWindow();if(window.isMaximized()){window.unmaximize()}else{window.maximize()}document.activeElement.blur()})});Array.from(document.getElementsByClassName("fMb")).map(val=>{val.addEventListener("click",e=>{const window=remote.getCurrentWindow();window.minimize();document.activeElement.blur()})});Array.from(document.getElementsByClassName("mediaURL")).map(val=>{val.addEventListener("click",e=>{document.activeElement.blur()})})}else if(document.readyState==="complete"){document.getElementById("launch_details").style.maxWidth=266.01;document.getElementById("launch_progress").style.width=170.8;document.getElementById("launch_details_right").style.maxWidth=170.8;document.getElementById("launch_progress_label").style.width=53.21}},false);$(document).on("click",'a[href^="http"]',function(event){event.preventDefault();shell.openExternal(this.href)});document.addEventListener("keydown",function(e){if((e.key==="I"||e.key==="i")&&e.ctrlKey&&e.shiftKey){let window=remote.getCurrentWindow();window.toggleDevTools()}});