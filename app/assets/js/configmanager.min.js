const fs=require("fs-extra");const os=require("os");const path=require("path");const constants=require("../../config/constants");const logger=require("./loggerutil.min")("%c[ConfigManager]","color: #a02d2a; font-weight: bold");const sysRoot=process.env.APPDATA||(process.platform=="darwin"?process.env.HOME+"/Library/Application Support":process.env.HOME);const dataPath=path.join(sysRoot,"."+constants.APP_DATA_NAME);const launcherDir=process.env.CONFIG_DIRECT_PATH||require("@electron/remote").app.getPath("userData");exports.getLauncherDirectory=function(){return launcherDir};exports.getDistributionVersion=function(){return config.distributionVersion};exports.setDistributionVersion=function(version){config.distributionVersion=version};exports.getDataDirectory=function(def=false){return!def?config.settings.launcher.dataDirectory:DEFAULT_CONFIG.settings.launcher.dataDirectory};exports.setDataDirectory=function(dataDirectory){config.settings.launcher.dataDirectory=dataDirectory};exports.getServerCodes=function(){return config.settings.launcher.serverCodes};exports.setServerCodes=function(serverCodes){config.settings.launcher.serverCodes=serverCodes};const configPath=path.join(exports.getLauncherDirectory(),"config.json");const firstLaunch=!fs.existsSync(configPath);exports.getAbsoluteMinRAM=function(){const mem=os.totalmem();return mem>=6e9?3:2};exports.getAbsoluteMaxRAM=function(){const mem=os.totalmem();return Math.floor(mem/1e9)};function resolveMaxRAM(){const mem=os.totalmem();return mem>=16e9?"8G":mem>=8e9?"6G":mem>=6e9?"4G":"2G"}function resolveMinRAM(){return resolveMaxRAM()}const DEFAULT_CONFIG={settings:{java:{minRAM:resolveMinRAM(),maxRAM:resolveMaxRAM(),executable:null,jvmOptions:["-d64","-XX:+AggressiveOpts","-XX:ParallelGCThreads=3","-XX:+UseConcMarkSweepGC","-XX:+CMSIncrementalMode","-XX:-UseAdaptiveSizePolicy","-Xmn128M","-XX:+UnlockExperimentalVMOptions","-XX:+UseParNewGC","-XX:+ExplicitGCInvokesConcurrent","-XX:MaxGCPauseMillis=10","-XX:GCPauseIntervalMillis=50","-XX:+UseFastAccessorMethods","-XX:+OptimizeStringConcat","-XX:NewSize=128m","-XX:+UseAdaptiveGCBoundary","-XX:NewRatio=3","-Dfml.readTimeout=180","-Dfml.loginTimeout=180","-Dfml.ignoreInvalidMinecraftCertificates=true","-XX:HeapDumpPath=MojangTricksIntelDriversForPerformance_javaw.exe_minecraft.exe.heapdump"]},game:{resWidth:1280,resHeight:720,fullscreen:false,autoConnect:true,launchDetached:true,consoleOnLaunch:false},launcher:{allowPrerelease:false,discordIntegration:false,dataDirectory:dataPath,serverCodes:[]}},newsCache:{date:null,content:null,dismissed:false},clientToken:null,distributionVersion:null,selectedServer:null,selectedAccount:null,authenticationDatabase:{},modConfigurations:[],microsoftAuth:{}};let config=null;exports.save=function(){fs.writeFileSync(configPath,JSON.stringify(config,null,4),"UTF-8")};exports.load=function(){let doLoad=true;if(!fs.existsSync(configPath)){fs.ensureDirSync(path.join(configPath,".."));doLoad=false;config=DEFAULT_CONFIG;exports.save()}if(doLoad){let doValidate=false;try{config=JSON.parse(fs.readFileSync(configPath,"UTF-8"));doValidate=true}catch(err){logger.error(err);logger.log("Configuration file contains malformed JSON or is corrupt.");logger.log("Generating a new configuration file.");fs.ensureDirSync(path.join(configPath,".."));config=DEFAULT_CONFIG;exports.save()}if(doValidate){config=validateKeySet(DEFAULT_CONFIG,config);exports.save()}}logger.log("Successfully Loaded")};exports.isLoaded=function(){return config!=null};function validateKeySet(srcObj,destObj){if(srcObj==null){srcObj={}}const validationBlacklist=["authenticationDatabase"];const keys=Object.keys(srcObj);for(let i=0;i<keys.length;i++){if(typeof destObj[keys[i]]==="undefined"){destObj[keys[i]]=srcObj[keys[i]]}else if(typeof srcObj[keys[i]]==="object"&&srcObj[keys[i]]!=null&&!(srcObj[keys[i]]instanceof Array)&&validationBlacklist.indexOf(keys[i])===-1){destObj[keys[i]]=validateKeySet(srcObj[keys[i]],destObj[keys[i]])}}return destObj}exports.isFirstLaunch=function(){return firstLaunch};exports.getTempNativeFolder=function(){return"WCNatives"};exports.getNewsCache=function(){return config.newsCache};exports.setNewsCache=function(newsCache){config.newsCache=newsCache};exports.setNewsCacheDismissed=function(dismissed){config.newsCache.dismissed=dismissed};exports.getCommonDirectory=function(){return path.join(exports.getDataDirectory(),"common")};exports.getInstanceDirectory=function(){return path.join(exports.getDataDirectory(),"instances")};exports.getClientToken=function(){return config.clientToken};exports.setClientToken=function(clientToken){config.clientToken=clientToken};exports.getSelectedServer=function(def=false){return!def?config.selectedServer:DEFAULT_CONFIG.clientToken};exports.setSelectedServer=function(serverID){config.selectedServer=serverID};exports.getAuthAccounts=function(){return config.authenticationDatabase};exports.getAuthAccount=function(uuid){return config.authenticationDatabase[uuid]};exports.updateAuthAccount=function(uuid,accessToken,expiresAt=undefined){config.authenticationDatabase[uuid].accessToken=accessToken;config.authenticationDatabase[uuid].expiresAt=expiresAt;return config.authenticationDatabase[uuid]};exports.updateMicrosoftAuthAccount=function(uuid,accessToken,msAccessToken,msRefreshToken,msExpires,mcExpires){config.authenticationDatabase[uuid].accessToken=accessToken;config.authenticationDatabase[uuid].expiresAt=mcExpires;config.authenticationDatabase[uuid].microsoft.access_token=msAccessToken;config.authenticationDatabase[uuid].microsoft.refresh_token=msRefreshToken;config.authenticationDatabase[uuid].microsoft.expires_at=msRefreshToken;return config.authenticationDatabase[uuid]};exports.addAuthAccount=function(uuid,accessToken,username,displayName){config.selectedAccount=uuid;config.authenticationDatabase[uuid]={accessToken:accessToken,username:username.trim(),uuid:uuid.trim(),displayName:displayName.trim(),type:"mojang"};return config.authenticationDatabase[uuid]};exports.addMsAuthAccount=function(uuid,accessToken,name,mcExpires,msAccessToken,msRefreshToken,msExpires){config.selectedAccount=uuid;config.authenticationDatabase[uuid]={accessToken:accessToken,username:name.trim(),uuid:uuid.trim(),displayName:name.trim(),expiresAt:mcExpires,type:"microsoft",microsoft:{access_token:msAccessToken,refresh_token:msRefreshToken,expires_at:msExpires}};return config.authenticationDatabase[uuid]};exports.removeAuthAccount=function(uuid){if(config.authenticationDatabase[uuid]!=null){delete config.authenticationDatabase[uuid];if(config.selectedAccount===uuid){const keys=Object.keys(config.authenticationDatabase);if(keys.length>0){config.selectedAccount=keys[0]}else{config.selectedAccount=null;config.clientToken=null}}return true}return false};exports.getSelectedAccount=function(){return config.authenticationDatabase[config.selectedAccount]};exports.setSelectedAccount=function(uuid){const authAcc=config.authenticationDatabase[uuid];if(authAcc!=null){config.selectedAccount=uuid}return authAcc};exports.getModConfigurations=function(){return config.modConfigurations};exports.setModConfigurations=function(configurations){config.modConfigurations=configurations};exports.getModConfiguration=function(serverid){const cfgs=config.modConfigurations;for(let i=0;i<cfgs.length;i++){if(cfgs[i].id===serverid){return cfgs[i]}}return null};exports.setModConfiguration=function(serverid,configuration){const cfgs=config.modConfigurations;for(let i=0;i<cfgs.length;i++){if(cfgs[i].id===serverid){cfgs[i]=configuration;return}}cfgs.push(configuration)};exports.getMinRAM=function(def=false){return!def?config.settings.java.minRAM:DEFAULT_CONFIG.settings.java.minRAM};exports.setMinRAM=function(minRAM){config.settings.java.minRAM=minRAM};exports.getMaxRAM=function(def=false){return!def?config.settings.java.maxRAM:resolveMaxRAM()};exports.setMaxRAM=function(maxRAM){config.settings.java.maxRAM=maxRAM};exports.getJavaExecutable=function(){return config.settings.java.executable};exports.setJavaExecutable=function(executable){config.settings.java.executable=executable};exports.getJVMOptions=function(def=false){return!def?config.settings.java.jvmOptions:DEFAULT_CONFIG.settings.java.jvmOptions};exports.setJVMOptions=function(jvmOptions){config.settings.java.jvmOptions=jvmOptions};exports.getGameWidth=function(def=false){return!def?config.settings.game.resWidth:DEFAULT_CONFIG.settings.game.resWidth};exports.setGameWidth=function(resWidth){config.settings.game.resWidth=Number.parseInt(resWidth)};exports.validateGameWidth=function(resWidth){const nVal=Number.parseInt(resWidth);return Number.isInteger(nVal)&&nVal>=0};exports.getGameHeight=function(def=false){return!def?config.settings.game.resHeight:DEFAULT_CONFIG.settings.game.resHeight};exports.setGameHeight=function(resHeight){config.settings.game.resHeight=Number.parseInt(resHeight)};exports.validateGameHeight=function(resHeight){const nVal=Number.parseInt(resHeight);return Number.isInteger(nVal)&&nVal>=0};exports.getFullscreen=function(def=false){return!def?config.settings.game.fullscreen:DEFAULT_CONFIG.settings.game.fullscreen};exports.setFullscreen=function(fullscreen){config.settings.game.fullscreen=fullscreen};exports.getAutoConnect=function(def=false){return!def?config.settings.game.autoConnect:DEFAULT_CONFIG.settings.game.autoConnect};exports.setAutoConnect=function(autoConnect){config.settings.game.autoConnect=autoConnect};exports.getLaunchDetached=function(def=false){return!def?config.settings.game.launchDetached:DEFAULT_CONFIG.settings.game.launchDetached};exports.setLaunchDetached=function(launchDetached){config.settings.game.launchDetached=launchDetached};exports.getConsoleOnLaunch=function(def=false){return!def?config.settings.game.consoleOnLaunch:DEFAULT_CONFIG.settings.game.consoleOnLaunch};exports.setConsoleOnLaunch=function(consoleOnLaunch){config.settings.game.consoleOnLaunch=consoleOnLaunch};exports.getAllowPrerelease=function(def=false){return!def?config.settings.launcher.allowPrerelease:DEFAULT_CONFIG.settings.launcher.allowPrerelease};exports.setAllowPrerelease=function(allowPrerelease){config.settings.launcher.allowPrerelease=allowPrerelease};exports.getDiscordIntegration=function(def=false){return!def?config.settings.launcher.discordIntegration:DEFAULT_CONFIG.settings.launcher.discordIntegration};exports.setDiscordIntegration=function(discordIntegration){config.settings.launcher.discordIntegration=discordIntegration};exports.setMicrosoftAuth=microsoftAuth=>{config.microsoftAuth=microsoftAuth};exports.getMicrosoftAuth=()=>{return config.microsoftAuth};exports.updateMicrosoftAuth=(accessToken,expiresAt)=>{config.microsoftAuth.access_token=accessToken;config.microsoftAuth.expires_at=expiresAt;return config.microsoftAuth};